// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	dto "github.com/LeandroAlcantara-1997/heroes-social-network/internal/domain/console/dto"
	gomock "github.com/golang/mock/gomock"
)

// MockConsole is a mock of Console interface.
type MockConsole struct {
	ctrl     *gomock.Controller
	recorder *MockConsoleMockRecorder
}

// MockConsoleMockRecorder is the mock recorder for MockConsole.
type MockConsoleMockRecorder struct {
	mock *MockConsole
}

// NewMockConsole creates a new mock instance.
func NewMockConsole(ctrl *gomock.Controller) *MockConsole {
	mock := &MockConsole{ctrl: ctrl}
	mock.recorder = &MockConsoleMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConsole) EXPECT() *MockConsoleMockRecorder {
	return m.recorder
}

// CreateConsoles mocks base method.
func (m *MockConsole) CreateConsoles(ctx context.Context, req *dto.ConsoleRequest) (*dto.ConsoleResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateConsoles", ctx, req)
	ret0, _ := ret[0].(*dto.ConsoleResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateConsoles indicates an expected call of CreateConsoles.
func (mr *MockConsoleMockRecorder) CreateConsoles(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateConsoles", reflect.TypeOf((*MockConsole)(nil).CreateConsoles), ctx, req)
}

// GetConsoles mocks base method.
func (m *MockConsole) GetConsoles(ctx context.Context) (*dto.ConsoleResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConsoles", ctx)
	ret0, _ := ret[0].(*dto.ConsoleResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetConsoles indicates an expected call of GetConsoles.
func (mr *MockConsoleMockRecorder) GetConsoles(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConsoles", reflect.TypeOf((*MockConsole)(nil).GetConsoles), ctx)
}
